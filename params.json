{"google":"UA-35888766-1","body":"## Usage\r\n\r\nSteelToe is a tiny JavaScript function that makes it safe to traipse about objects without worrying about whether keys may or may not exist, and whether it's safe to try and look inside of them. There are two ways to use it:\r\n\r\n### Method #1\r\n```javascript\r\nvar object = { info: { name: { first: 'Jonathan', last: 'Clem' } } }\r\n\r\nobject = SteelToe(object);\r\nobject('info')('name')('last')();           // 'Clem'\r\nobject('info')('features')('hairColor')();  // undefined\r\n```\r\n\r\n### Method #2\r\n```javascript\r\nvar object = { info: { name: { first: 'Jonathan', last: 'Clem' } } }\r\n\r\nobject = SteelToe(object);\r\nobject.walk('info.name.last');          // 'Clem'\r\nobject.walk('info.features.hairColor'); // undefined\r\n```\r\n\r\n## Details\r\n\r\nLet's say you've got some deeply nested data in JavaScript objects that you've just parsed from a JSON API response. For each result, you need to do something if there's some sort of data present:\r\n\r\n```javascript\r\nvar fatherFirstNames = [];\r\n\r\nfor (var i = 0; i < families.length; i ++) {\r\n  var first = families[i].father.info.name.first;\r\n\r\n  if (first) {\r\n    fatherFirstNames.push(first);\r\n  }\r\n}\r\n\r\n// TypeError: 'undefined' is not an object (evaluating 'family.father.info.name.first')\r\n```\r\n\r\nWhoops! You shot yourself in the foot. You got a `TypeError` because you had no guarantee that the family had a father, or that the father had info present, or that his name was returned! You fix it by writing this monstrosity:\r\n\r\n```javascript\r\nvar farherFirstNames = [];\r\n\r\nfor (var i = 0; i < families.length; i++) {\r\n  var father = families[i].father;\r\n\r\n  if (father && father.info && father.info.name && father.info.name.first) {\r\n    fatherFirstNames.push(father.info.name.first);\r\n  }\r\n}\r\n```\r\n\r\nOr, you could use SteelToe and write this:\r\n\r\n```javascript\r\nvar fatherFirstNames = [];\r\n\r\nfor (var i = 0; i < families.length; i++) {\r\n  var family = SteelToe(families[i]),\r\n      name = family.walk('father.info.name.first');\r\n\r\n  if (name) {\r\n    fatherFirstNames.push(name);\r\n  }\r\n}\r\n\r\nfatherFirstNames; // [\"Hank\", \"Dale\", \"Bill\"]\r\n```\r\n\r\n## The End\r\n\r\nSteelToe was made when a coworker of mine said that he wished someone would write a JavaScript library that would allow him to traverse objects without shooting himself in the foot, and that the library was called SteelToe.","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Don't shoot yourself in the foot traversing objects.","name":"SteelToe"}